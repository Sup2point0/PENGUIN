from recog import *
from weightedlist import WeightedList


ancest = {
  # main
  "Antarctica": main.Antarctica.show(),
  "United Nation Of Antarctica": main.Antarctica.show("United Nation of Antarctica"),
  "Nation Of Antarctica": main.Antarctica,
  "ATC": main.Antarctica,
  "ATCA": main.Antarctica,
  "Self": main.Antarctica,
  "Country": main.Antarctica,
  "Origin": main.Antarctica,
  "Us": main.Antarctica,
  "Here": main.Antarctica,
  "Home": main.Antarctica,
  "Continent Of Antarctica": main.Continent.show("Continent of Antarctica"),
  "Continent": main.Continent,
  "Mainland": main.Continent,

  "Foundation Of Antarctica": main.Foundation.show("Foundation of Antarctica"),
  "Foundation": main.Foundation,
  "Government": main.Foundation,
  "Antarctican Trust": main.Trust.show(),
  "Trust": main.Trust,
  "Charity": main.Trust,

  "SAME": main.SAME.show(),
  "Language": main.SAME,
  "Languages": main.SAME,
  "Communication": main.SAME,
  "Dialect": main.SAME,

  "7 Marvels Of Antarctica": main.Marvels.show("7 Marvels of Antarctica"),
  "7 Marvels": main.Marvels,
  "Marvels": main.Marvels,
  "Marvel": main.Marvels,
  "Wonders Of Antarctica": main.Marvels,
  "Wonders Of The World": main.Marvels,
  "Wonders": main.Marvels,
  "Wonder": main.Marvels,

  # time
  "Antarctican Calendar": time.Calendar.show(),
  "Calendar": time.Calendar,
  "Year": time.Calendar,
  "Decant": time.Decant.show(),
  "Month": time.Decant,
  "Vedecant": time.Decant,
  "Adecant": time.Decant,
  "Sedecant": time.Decant,
  "Decate": time.Decate.show(),
  "Date": time.Decate,
  "Septan": time.Septan.show(),
  "Week": time.Septan,
  "Secta": time.Septan,
  "Septate": time.Septate.show(),
  "Day": time.Septate,
  "Weekend": time.Septan,
  "Weekday": time.Septan,

  "Arteria": time.decants.Arteria.show(),
  "1": time.decants.Arteria,
  "A1": time.decants.Arteria,
  "Vitida": time.decants.Vitida.show(),
  "2": time.decants.Vitida,
  "V1": time.decants.Vitida,
  "Arrikta": time.decants.Arrikta.show(),
  "3": time.decants.Arrikta,
  "A2": time.decants.Arrikta,
  "Valia": time.decants.Valia.show(),
  "4": time.decants.Valia,
  "V2": time.decants.Valia,
  "Aliquanda": time.decants.Aliquanda.show(),
  "5": time.decants.Aliquanda,
  "A3": time.decants.Aliquanda,
  "Verita": time.decants.Verita.show(),
  "6": time.decants.Verita,
  "V3": time.decants.Verita,
  "Arteva": time.decants.Arteva.show(),
  "7": time.decants.Arteva,
  "A4": time.decants.Arteva,
  "Vepida": time.decants.Vepida.show(),
  "8": time.decants.Vepida,
  "V4": time.decants.Vepida,
  "Aeva": time.decants.Aeva.show(),
  "9": time.decants.Aeva,
  "A5": time.decants.Aeva,
  "Verena": time.decants.Verena.show(),
  "10": time.decants.Verena,
  "V5": time.decants.Verena,

  "Discovery Day": time.fest.Discovery.show(),
  "Tersolle": time.fest.Tersolle.show(),
  "Invict Day": time.fest.Invict.show(),
  "Invict": time.fest.Invict,
  "Falcon's Noon": time.fest.Falcon.show(),
  "Falcons Noon": time.fest.Falcon,
  "Falcons' Noon": time.fest.Falcon,

  # geo
  "District": geo.dist.District.show(),
  "Aventurina District": geo.dist.Aventurina.show(),
  "Aventurina": geo.dist.Aventurina,
  "Atalla District":geo.dist.Atalla.show(),
  "Atalla": geo.dist.Atalla,
  "Ascerta District": geo.dist.Ascerta.show(),
  "Ascerta": geo.dist.Ascerta,

  "Titeria District": geo.dist.Titeria.show(),
  "Titeria": geo.dist.Titeria,
  "Tyrestra District": geo.dist.Tyrestra.show(),
  "Tyrestra": geo.dist.Tyrestra,

  "Divelda District": geo.dist.Divelda.show(),
  "Divelda": geo.dist.Divelda,
  "Dessica District": geo.dist.Dessica.show(),
  "Dessica": geo.dist.Dessica,
  "Discenda District": geo.dist.Discenda.show(),
  "Discenda": geo.dist.Discenda,

  "Ross City": geo.city.Ross.show(),
  "Capital City": geo.city.Ross,
  "Capital": geo.city.Ross,
  "Archadia": geo.city.Archadia.show(),
  "Archadia City": geo.city.Archadia,
  "Atla": geo.city.Atla.show(),
  "Atla City": geo.city.Atla,
  "Aleta": geo.city.Aleta.show(),
  "Aleta City": geo.city.Aleta,
  "Axona": geo.city.Axona.show(),
  "Axona City": geo.city.Axona,

  "Novada": geo.city.Novada.show(),
  "Novada City": geo.city.Novada,
  "Teneca": geo.city.Teneca.show(),
  "Teneca City": geo.city.Teneca,
  "Yena": geo.city.Yena.show(),
  "Yena City": geo.city.Yena,
  "Escharcha": geo.city.Escharcha.show(),
  "Escharcha City": geo.city.Escharcha,
  "Panaxa": geo.city.Panaxa.show(),
  "Panaxa City": geo.city.Panaxa,
  "Vanqua": geo.city.Vanqua.show(),
  "Vanqua City": geo.city.Vanqua,
  "Anarcha": geo.city.Anarcha.show(),
  "Anarcha City": geo.city.Anarcha,
  "Helada": geo.city.Helada.show(),
  "Helada City": geo.city.Helada,

  # locations
  "CARROT": loc.Carrot.show(),
  "Control Tower": loc.Carrot,
  "Rubicon Valley": loc.Rubicon.show(),
  "Atalon": loc.Atalon.show(),

  # education
  "Education System Of Antarctica": edu.System.show("Education System of Antarctica"),
  "Education in Antarctica": edu.System,
  "Education": edu.System,
  "Foundational Education": edu.Foundational.show(),
  "Lower Education": edu.Lower.show(),
  "Prime Education": edu.Prime.show(),
  "Higher Education": edu.Higher.show(),

  "Universities": edu.uni.Universities.show("Universities of Antarctica"),
  "Scott University": edu.uni.Scott.show(),
  "Amundsen College": edu.uni.Amundsen.show(),
  "Ross Academy": edu.uni.Ross.show(),
  "NIOTECH": edu.uni.Nio.show("NioTech"),
  "National Institute Of Technology": edu.uni.Nio,
  "ROAG": edu.uni.ROAG.show(),
  "Royal Academy Of Geoengineering": edu.uni.ROAG,
  "LAKARA": edu.uni.Lakara.show("Lakara"),
  "Lazarev And Klenova Academy Of Research And Advancement": edu.uni.Lakara,
  "Lazarev & Klenova Academy Of Research & Advancement": edu.uni.Lakara,
  "Evelyn Institute Of Exploration": edu.uni.Evelyn.show("Evelyn Institute of Exploration"),
  "Evelyn": edu.uni.Evelyn,
  "ISAB": edu.uni.ISAB.show(),
  "Ingra-Shackleton Academy Of Bioengineering": edu.uni.ISAB,
  "Ingra Shackleton Academy Of Bioengineering": edu.uni.ISAB,

  # tech
  "The Geosphere": tech.Geosphere.show(),
  "Geosphere": tech.Geosphere,
  "Biosphere": tech.Geosphere,
  "Sphere": tech.Geosphere,
  "Dome": tech.Geosphere,
  "The Dome": tech.Geosphere,
  "The Geomatrix": tech.Geomatrix.show(),
  "Geomatrix": tech.Geomatrix,

  "CORE": tech.core.CORE.show(),
  "A-CORE": tech.core.A.show(),
  "Acore": tech.core.A,
  "V-CORE": tech.core.V.show(),
  "Vcore": tech.core.V,
  "E-CORE": tech.core.E.show(),
  "Ecore": tech.core.E,
  "S-CORE": tech.core.S.show(),
  "Score": tech.core.S,
  "W-CORE": tech.core.W.show(),
  "Wcore": tech.core.W,
  "I-CORE": tech.core.I.show(),
  "Icore": tech.core.I,

  # medi
  "NICCOLU": medi.Niccolu.show("Niccolu"),
  "CLOMS": medi.CLOMS.show(),
  "Concerningly Low Metabolism Syndrome": medi.CLOMS,
  "EDAICS": medi.EDAICS.show(),
  "Energy Deficient AutoImmune Collapse Syndrome": medi.EDAICS,

  # military
  "Terra Forza": mili.div.Terra.show(),
  "Ground Force": mili.div.Terra,
  "Ground": mili.div.Terra,
  "Nava Corza": mili.div.Nava.show(),
  "Naval Force": mili.div.Nava,
  "Navy": mili.div.Nava,
  "Aera Norza": mili.div.Aera.show(),
  "Air Force": mili.div.Aera,
  "Aeronauts": mili.div.Aera,
  "Ginga Ranza": mili.div.Ginga.show(),
  "Space Force": mili.div.Ginga,
  "ASDF": mili.div.ASDF.show(),
  "Antarctican Special Defence Force": mili.div.ASDF,
  "Antarctican Special Defense Force": mili.div.ASDF,
  "Special Forces": mili.div.ASDF,
  "Special Force": mili.div.ASDF,
  "Special Operations": mili.div.ASDF,
  "Special Ops": mili.div.ASDF,

  "ASMR": mili.awards.ASMR.show(),
  "RESOUND": mili.awards.RESOUND.show(),

  # history
  "Roald Amundsen": hist.fig.Amundsen.show(),
  "Amundsen": hist.fig.Amundsen,
  "Roald Engelbregt Gravning Amundsen": hist.fig.Amundsen,
  "Robert Scott": hist.fig.Scott.show(),
  "Scott": hist.fig.Scott,
  "Robert Falcon Scott": hist.fig.Scott,
  "Sir Robert Falcon Scott": hist.fig.Scott,
  "James Ross": hist.fig.Ross.show(),
  "Ross": hist.fig.Ross,
  "James Clark Ross": hist.fig.Ross,
  "Sir James Clark Ross": hist.fig.Ross,

  "Lynuca Veritori": hist.fig.Lynuca.show(),
  "Lynuca": hist.fig.Lynuca,
  "Veritori": hist.fig.Lynuca,
  "Detrin Viruna": hist.fig.Detrin.show(),
  "Detrin": hist.fig.Detrin,
  "Viruna": hist.fig.Detrin,
  "Anatrin Anaconda": hist.fig.Anatrin.show(),
  "Anatrin": hist.fig.Anatrin,
  "Anaconda": hist.fig.Anatrin,

  "Alonzo Ark": hist.fig.Alonzo.show(),
  "Alonzo Altan Ark": hist.fig.Alonzo,
  "Adelina Ark": hist.fig.Adelina.show(),
  "Adelina Altan Ark": hist.fig.Adelina,

  "Timeline": hist.stat.Timeline.show("Timeline of Antarctican History"),
  "History": hist.stat.Timeline,
  "Heritage": hist.stat.Timeline,
  "Historical Figures Of Antarctica": hist.stat.Figures.show("Historical Figures of Antarctica"),
  "Notable Historical Figures": hist.stat.Figures,
  "Notable Figures Of Antarctica": hist.stat.Figures,
  "Notable Figures": hist.stat.Figures,
  "Ascendant": hist.stat.Ascendant.show(),
  "Ruler": hist.stat.Ascendant,
  "King": hist.stat.Ascendant,
  "Emperor": hist.stat.Ascendant,
  "Sovereign": hist.stat.Ascendant,
  "Royalty": hist.stat.Ascendant,

  "Ancient Antarctica": hist.era.Ancient.show(),
  "Ancient": hist.era.Ancient,
  "Colonies Of Antarctica": hist.era.Colonies.show("Colonies of Antarctica"),
  "Colonies": hist.era.Colonies,
  "Colony": hist.era.Colonies,
  "Ancient Anarchy": hist.era.Anarchy.show(),
  "Anarchy": hist.era.Anarchy,
  "Republic Of Antarctica": hist.era.Republic.show("Republic of Antarctica"),
  "Republic": hist.era.Republic,
  "New Antarctica": hist.era.New.show(),
  "New": hist.era.New,

  "Atalos": hist.leg.Atalos.show(),

  # nato
  "Aurora Australis": nato.Aurora.show(),
  "Aurora": nato.Aurora,
  "Southern Lights": nato.Aurora,

  "Photoplankton": nato.Plankton.show(),
  "Ni Coli": nato.Coli.show(),
  "Coli": nato.Coli,

  "Simmering Opal": nato.cryst.Opal.show(),
  "Opal": nato.cryst.Opal,
  "Trekker's Treasure": nato.cryst.Opal,
  "Antarctic Essence": nato.cryst.Essence.show(),
  "Celestial Essence": nato.cryst.Essence,
  "Essence": nato.cryst.Essence,
  "Vericium Ultri": nato.cryst.Essence,

  # misc
  "ARCANE": misc.ARCANE.show(),
  "ASCENSE": misc.ASCENSE.show(),
  "Elements": misc.ASCENSE,
  "Nuclear": misc.Nuclear.show("Nuclear Armaments of Antarctica"),
  "RETINA": misc.RETINA.show(),
  "SUPCODE": misc.supcode.show("Supcode"),

  # disc
  "ADE": disc.ade.ADE.show(),
  "Bot": disc.ade.ADE,
  "ADELINE": disc.ade.Adeline.show("Adeline"),
  "Sup#0.2": disc.ade.Sup.show(),
  "Sup0.2": disc.ade.Sup,
  "SHARD": disc.ade.Shard.show(),
  "SHARD-BOT": disc.ade.Shard,
  "PENGUIN": disc.ade.Penguin.show(),
  "PENGUIN-BOT": disc.ade.Penguin,
  "ABSOLUTE": disc.ade.Absolute,
  "WARDEN": disc.ade.Warden,
  "WARDEN-BOT": disc.ade.Warden,

  # easter eggs
  "EASTER EGG": egg.Egg,
  "NOT SO RANDOM": egg.Rare,
  "I LOVE ANTARCTICA": egg.Epic,
  "HIDDEN SEQUENCE": egg.Legendary,
  "THE JOINING": egg.Mythical,
  "ALL HAIL PENGUIN": egg.Heavenly,
  "FUDGE YOU DELE": egg.Celestial,

  "Diamond Shard": egg.Diamond,


  # deprecated
  "ARC": item(
    title = "Antarctican Residence Core",
    caption = "[deprecated] Technological Device",
    content = "TBA",
    other = "A-CORE",
  )
}


affluence = {
  "antect": word.antect.show(),
  "concyze": word.concyze.show(),
  "decant": word.decant.show(),
  "decate": word.decate.show(),
  "septan": word.septan.show(),
  "septate": word.septate.show(),
}


assist = WeightedList(
  (1, "You can submit ideas using `/util idea`."),
  (1, "If you find any bugs or missing descriptions, be sure to report it!"),
  (1, "Autocomplete can take a second to load, as the options have to be sent to from Penguin to Discord."),
  (1, "If autocomplete fail to load, that’s probably a sign that something’s broken. Alternatively, Penguin could be down."),
  (1, "Many autocomplete options will display randomyzed items when you haven’t typed anything yet."),
  (1, "Many commands with a singular optional field will lookup a random item when the field is left empty."),
  (1, "You can submit anonymous ideas when activating `/util idea` by enabling the `anonymous` option, should you wish to do so."),
  (1, "You can view my profile using `/vita visualyze` to see global stats across all identities."),
)

aspect = WeightedList(
  (1, "69% of the world’s freshwater reserves are stored in the ancient ice of the Antarctic continent."),
  (1, "The flag of Antarctica depicts a triangular pole against a dark blue sky, with a shadow cast upon on the white ice."),
  (1, "The Foundation of Antarctica’s flag is actually the flag of Antarctica flipped!"),
  (1, "The Foundation of Antarctica’s flag depicts an iceberg floating among a dark blue sea, against a white sky, with dark blue structures of civilization atop it."),
  (1, "The capital city of Antarctica is Ross City, in the Aventurina Distict."),
  (1, "The decants and their values correspond with the time of year that they represent – for example, Vepida, the decant of warmth, is the peak of summer and the warmest decant of the year."),
  (1, "People can still survive within the Geosphere without a CORE; it’s just colder and less comfortable."),
  (1, "The I-CORE contains a tiny amount of Antarctic Essence."),
  (1, "Should you decide to throw yourself at the Geosphere, which is heavily unadvised, you’ll be instantly neutralized."),
  (1, "The words ‘Antarctic’ and ‘Antarctican’ are very similar, but have slightly different meanings. ‘Antarctic’ means relating to the *continent* of Antarctica, while ‘Antarctican’ means relating to the *country* of Antarctica."),
  (1, "The colour of the Antarctican flag is known as ‘Antarctican Blue’."),
  (1, "The blue tint of the surface ice in Antarctica is known as ‘Antarctic Blue’."),
  (1, "Aventurine is the national gemstone of Antarctica."),
  (1, "SHARD is the 3rd generation of its Adeline, preceded by SPARK and SHIVER."),
  (1, "PENGUIN is the second generation of its Adeline, preceded by EDEN."),
  (1, "*Vitaline* was originally called *Lifeline*."),
  (1, "Would you like to know about the Arctic? Well, we don’t talk about that here."),
  (1, "The old version of the A-CORE was called the ARC."),
  (1, "The old version of the V-CORE was called the AVA."),
)

arcane = WeightedList(
  "publisher taking initiative originally in shooting writer",
  "lark circling sailor caught, a bleak prospect",
)